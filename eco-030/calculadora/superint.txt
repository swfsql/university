public class SuperInt {
	private int x[];
	private int numDigitos;

	public SuperInt(String v) {
		x = new int[100];
		numDigitos = v.length();
		for (int i = 0; i < numDigitos; i++) {
			x[numDigitos - i - 1] = (int) v.charAt(i) - 48;

		}
	}

	public String toString() {

		byte temp[] = new byte[numDigitos];
		for (int i = 0; i < numDigitos; i++) {
			temp[numDigitos - i - 1] = (byte) (x[i] + 48);
		}
		String s = new String(temp);
		return s;
	}

	private SuperInt(int v[], int n) {
		x = v;
		numDigitos = n;
	}

	public SuperInt soma(SuperInt op) {
		int aux, vaiUm = 0;
		int maiorTam = (numDigitos > op.numDigitos) ? numDigitos
				: op.numDigitos;
		int menorTam = (numDigitos < op.numDigitos) ? numDigitos
				: op.numDigitos;
		int res[] = new int[100];

		for (int i = -0; i < maiorTam; ++i) {
			if (i < menorTam)
				aux = x[i] + op.x[i] + vaiUm;
			else if (maiorTam == numDigitos)
				aux = x[i] + vaiUm;
			else
				aux = op.x[i] + vaiUm;

			if (aux < 10)

			{
				vaiUm = 0;
				res[i] = aux;

			} else {
				vaiUm = 1;
				res[i] = aux - 10;
			}
		}
		res[maiorTam] = vaiUm;
		SuperInt r = new SuperInt(res, maiorTam + vaiUm);
		return r;

	}


}
